<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    static string CreateTypeArgument(int i)
    {
        return string.Join(", ", Enumerable.Range(0, i).Select(x => "T" + x));
    }

    static string CreateParameters(int i)
    {
        return string.Join(", ", Enumerable.Range(0, i).Select(x => "T" + x + " arg" + x));
    }

#>
using System.Runtime.CompilerServices;

namespace Cysharp.Text
{
    public static partial class ZString
    {
<# for(var i = 1; i <= 16; i++) { #>
        /// <summary>Concatenates the string representation of some specified objects.</summary>
        public static string Concat<<#= CreateTypeArgument(i) #>>(<#= CreateParameters(i) #>)
        {
            var sb = new Utf16ValueStringBuilder(true);
            try
            {
<# for(var j = 0; j < i; j++) { #>
                if (typeof(T<#= j #>) == typeof(string))
                {
                    sb.Append(Unsafe.As<T<#= j #>, string>(ref arg<#= j #>));
                }
                else if (typeof(T<#= j #>) == typeof(int))
                {
                    sb.Append(Unsafe.As<T<#= j #>, int>(ref arg<#= j #>));
                }
                else
                {
                    sb.Append(arg<#= j #>);
                }

<# } #>
                return sb.ToString();
            }
            finally
            {
                sb.Dispose();
            }
        }

<# } #>
    }
}